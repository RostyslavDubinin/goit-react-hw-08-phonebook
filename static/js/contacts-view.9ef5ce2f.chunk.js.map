{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/FormContact/FormContact.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/ContactsList/ContactsList.js","components/FormContact/FormContact.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","text","name","includes","getFiteredContacts","contactsOperations","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","addContact","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactList","useSelector","useDispatch","useEffect","operations","className","styles","list","map","listItem","Button","variant","color","size","onClick","onDeleteContact","button","ContactForm","useState","setName","setNumber","container","onSubmit","e","preventDefault","alert","form","TextField","label","type","value","pattern","title","formInput","onChange","target","Filter","input","actions","ContactsView","wrapper"],"mappings":"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","file":"static/js/contacts-view.9ef5ce2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"name\":\"ContactsList_name__1AS-g\",\"number\":\"ContactsList_number__38cJb\",\"listItem\":\"ContactsList_listItem__ic_NQ\",\"button\":\"ContactsList_button__2RjNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormContact_container__1PHSl\",\"form\":\"FormContact_form__1jCo9\",\"formLabel\":\"FormContact_formLabel__1lINO\",\"formInput\":\"FormContact_formInput__3oiJo\",\"button\":\"FormContact_button__2umha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__CCOvq\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFiteredContacts = (contacts) => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter((text) =>\n        text.name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n\n    return getFiteredContacts(contacts);\n  }\n);\n","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contacts-actions\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = (id) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\nimport operations from \"../../redux/contacts/contacts-operations\";\n\nimport styles from \"./ContactsList.module.css\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction ContactList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  const onDeleteContact = (id) => dispatch(operations.deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={styles.listItem}>\n            <span className={styles.name}>{name}:</span>\n            <span className={styles.number}>{number}</span>\n\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"small\"\n              onClick={() => onDeleteContact(id)}\n              className={styles.button}\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport operations from \"../../redux/contacts/contacts-operations\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\nimport styles from \"./FormContact.module.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !number) return;\n\n    const contactNames = contacts.map((contact) => contact.name.toLowerCase());\n    if (contactNames.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(operations.addContact(name, number));\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div className={styles.container}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Name\"\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          className={styles.formInput}\n          onChange={handleNameChange}\n        />\n\n        <TextField\n          id=\"standard-basic\"\n          label=\"Number\"\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          className={styles.formInput}\n          onChange={handleNumberChange}\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          size=\"small\"\n          className={styles.button}\n        >\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\n\nimport styles from \"./Filter.module.css\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      id=\"outlined-search\"\n      type=\"search\"\n      variant=\"outlined\"\n      label=\"Find contacts by name\"\n      value={value}\n      name=\"name\"\n      className={styles.input}\n      onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\n    />\n  );\n};\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ContactList from \"../../components/ContactsList/ContactsList\";\nimport ContactForm from \"../../components/FormContact/FormContact\";\nimport Filter from \"../../components/Filter/Filter\";\nimport operations from \"../../redux/contacts/contacts-operations\";\nimport styles from \"./ContactsView.module.css\";\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={styles.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}